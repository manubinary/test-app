{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","styled","div","useState","countryList","setCountryList","paginationIndex","setPaginationIndex","details","setDetails","open","setOpen","loader","setLoader","useEffect","fetch","then","response","json","responseJson","catch","error","console","className","Grid","container","xs","sm","md","lg","xl","spacing","Fragment","map","item","index","Card","variant","onClick","responseDetails","responseDetailsJson","CardContent","name","country","length","Pagination","count","Math","ceil","size","onChange","e","val","Dialog","onClose","DialogContent","IconButton","DialogContentText","id","CircularProgress","setup","punchline","App","Switch","Route","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2dae94.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport styled from \"styled-components\";\r\nimport './Home.scss';\r\n\r\nfunction Home() {\r\n  const mainHome = styled.div `\r\n    width: 100%;\r\n    margin: 0 !important;\r\n  `;\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [paginationIndex, setPaginationIndex] = useState(0);\r\n  const [details, setDetails] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    return fetch('http://universities.hipolabs.com/search?country=United+Kingdom')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setCountryList(responseJson);\r\n       })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const loadDetails = () => {\r\n    return fetch('https://official-joke-api.appspot.com/random_joke')\r\n      .then((responseDetails) => responseDetails.json())\r\n      .then((responseDetailsJson) => {\r\n        setDetails(responseDetailsJson);\r\n        setLoader(false);\r\n       })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const getCountryList = () => {\r\n    return (\r\n      <React.Fragment>\r\n        {countryList.map((item, index) => (\r\n          (index > paginationIndex && index < paginationIndex + 29) ? <Grid item xs={12} sm={12} md={6} lg={3} xl={3} >\r\n            <Card variant=\"outlined\" onClick={()=> {setLoader(true); loadDetails(); setOpen(true);}} key={index} className=\"dataContainer\">\r\n              <CardContent>{item.name}</CardContent>\r\n              <CardContent>{item.country}</CardContent>\r\n            </Card>\r\n          </Grid> : ''\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getDialogContent = () => {\r\n    return (\r\n      <div>\r\n        {loader && <CircularProgress />}\r\n        {details && details.setup && <h2>{details.setup}</h2>}\r\n        {(details && details.punchline) && <h3> {details.punchline}</h3>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getDetails = () => {\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={()=> {setOpen(false); setDetails([]);}}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent className=\"detailsModal\">\r\n          {!loader && <IconButton aria-label=\"close\" onClick={()=> {setOpen(false); setDetails([]);}} className=\"modalClose\"> <CloseIcon /></IconButton>}\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {getDialogContent()}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return(\r\n    <mainHome>\r\n      <div className=\"mainHeader\">\r\n        <div className=\"header\">\r\n          <h1>University Details</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"mainContainer\">\r\n        <Grid container xs={12} sm={12} md={12} lg={12} xl={12} spacing={3}>\r\n          {getCountryList()}\r\n        </Grid>\r\n        {(countryList && countryList.length > 0) && <Pagination className=\"paginationContainer\" count={Math.ceil(countryList.length/30)} size=\"small\" onChange={(e, val)=> setPaginationIndex((val-1)*30)}/>}\r\n      </div>\r\n      <div className=\"detailsModal\">{getDetails()}</div>\r\n    </mainHome>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import {BrowserRouter as Router , Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <Router>\n\t\t  <Switch>\n\t\t    <Route path=\"/\" component={Home} />\n\t\t  </Switch>\n\t  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}